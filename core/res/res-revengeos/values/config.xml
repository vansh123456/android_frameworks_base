<?xml version="1.0" encoding="utf-8"?>
<!--
/**
 * Copyright (C) 2020 RevengeOS
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
-->
<resources>
    <!-- Shows the required view for in-display fingerprint -->
    <bool name="config_supportsInDisplayFingerprint">false</bool>

    <!-- Paths to the libraries that contain device specific key handlers -->
    <string-array name="config_deviceKeyHandlerLibs" translatable="false">
    </string-array>

    <!-- Names of the key handler classes -->
    <string-array name="config_deviceKeyHandlerClasses" translatable="false">
    </string-array>

    <!-- Hardware keys present on the device, stored as a bit field.
         This integer should equal the sum of the corresponding value for each
         of the following keys present:
             1 - Home
             2 - Back
             4 - Menu
             8 - Assistant (search)
            16 - App switch
            32 - Camera
            64 - Volume rocker
         For example, a device with Home, Back and Menu keys would set this
         config to 7. -->
    <integer name="config_deviceHardwareKeys">64</integer>

    <!-- Control the behavior when the user long presses the home button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
            6 - Launch camera
            7 - Sleep
            8 - Toggle split screen
            9 - Take screenshot
         This needs to match the enums in DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnHomeBehaviorHwKeys">3</integer>

    <!-- Control the behavior when the user double-taps the home button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
            6 - Launch camera
            7 - Sleep
            8 - Toggle split screen
            9 - Take screenshot
         This needs to match the enums in DeviceKeysConstants.java.
    -->
    <integer name="config_doubleTapOnHomeBehaviorHwKeys">0</integer>

    <!-- Control the behavior when the user long presses the menu button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
            6 - Launch camera
            7 - Sleep
            8 - Toggle split screen
            9 - Take screenshot
         This needs to match the enums in DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnMenuBehaviorHwKeys">2</integer>


    <!-- Control the behavior when the user long presses the app switch button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
            6 - Launch camera
            7 - Sleep
            8 - Toggle split screen
            9 - Take screenshot
         This needs to match the enums in DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnAppSwitchBehaviorHwKeys">8</integer>

    <!-- Control the behavior when the user long presses the assist button.
            0 - Nothing
            1 - Menu key
            2 - Recent apps view in SystemUI
            3 - Launch assist intent
            4 - Voice Search
            5 - In-app Search
            6 - Launch camera
            7 - Sleep
            8 - Toggle split screen
            9 - Take screenshot
         This needs to match the enums in DeviceKeysConstants.java.
    -->
    <integer name="config_longPressOnAssistBehaviorHwKeys">4</integer>

    <!-- Whether to post reset runnable for all clients. Needed for some older
         vendor fingerprint HAL implementations. -->
    <bool name="config_fingerprintPostResetRunnableForAllClients">false</bool>

    <!-- Whether to cleanup fingerprints upon connection to the daemon and when user switches -->
    <bool name="config_cleanupUnusedFingerprints">true</bool>

     <!-- Defines the sysfs attribute path used by pocket bridge
         to communicate pocket state to the pocket judge kernel driver. -->
     <string name="config_pocketBridgeSysfsInpocket"></string>

     <!-- Pocket Lock -->
     <bool name="config_pocketModeSupported">true</bool>

     <!-- Defines custom OEM sensor for pocket detection. -->
     <string name="config_pocketJudgeVendorSensorName"></string>

    <!-- Default values for LiveDisplay -->
    <integer name="config_dayColorTemperature">6500</integer>
    <integer name="config_nightColorTemperature">4800</integer>
    <integer name="config_outdoorAmbientLux">12000</integer>
    <integer name="config_outdoorAmbientLuxHysteresis">1500</integer>
    <integer name="config_defaultLiveDisplayMode">2</integer>

    <!-- These values should map to the true min and max
         that the backend is capable of adjusting to. This
         is more important when using the ColorBalance mode,
         as the discrete adjustment is interpolated between
         this range (with config_dayColorTemperature at zero) -->
    <integer name="config_minColorTemperature">1000</integer>
    <integer name="config_maxColorTemperature">10000</integer>

    <bool name="config_defaultAutoContrast">false</bool>
    <bool name="config_defaultAutoOutdoorMode">true</bool>
    <bool name="config_defaultColorEnhancement">true</bool>
    <bool name="config_defaultCABC">true</bool>

    <!-- Display mode remapping table.
         If the mode names returned by the backend do not match
         the predefined and translated strings in the Settings
         app, they can be remapped here. The format is
         "oldname:newname", one per entry. -->
    <string-array name="config_displayModeMappings" translatable="false">
    </string-array>

    <!-- Should we filter any display modes which are unampped? -->
    <bool name="config_filterDisplayModes">false</bool>

       <!-- Default fod pressed color -->
    <integer name="config_fod_pressed_color">1</integer>

</resources>
